import{_ as e,a}from"./vuex.dfb35270.js";import{_ as o,y as s,x as n,W as t}from"./plugin-vue_export-helper.0b0d78d5.js";const h='{"title":"O que \xE9 Vuex?","description":"","frontmatter":{},"headers":[{"level":2,"title":"O que \xE9 um \\"Padr\xE3o de Gerenciamento do Estado\\"?","slug":"o-que-e-um-padrao-de-gerenciamento-do-estado"},{"level":2,"title":"Quando usar o Vuex?","slug":"quando-usar-o-vuex"}],"relativePath":"ptbr/index.md","lastUpdated":1702210160135}',r={},p=t(`<h1 id="o-que-e-vuex" tabindex="-1">O que \xE9 Vuex? <a class="header-anchor" href="#o-que-e-vuex" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>Esta documenta\xE7\xE3o \xE9 para o Vuex 4, que funciona com Vue 3. Se voc\xEA est\xE1 procurando a documenta\xE7\xE3o para o Vuex 3, que funciona com Vue 2, <a href="https://vuex.vuejs.org/ptbr/" target="_blank" rel="noopener noreferrer">por favor, confira aqui</a>.</p></div><p>O Vuex \xE9 um <strong>padr\xE3o de gerenciamento de estado + biblioteca</strong> para aplica\xE7\xF5es Vue.js. Ele serve como um <em>store</em> centralizado para todos os componentes em uma aplica\xE7\xE3o, com regras garantindo que o estado s\xF3 possa ser mutado de forma previs\xEDvel.</p><h2 id="o-que-e-um-padrao-de-gerenciamento-do-estado" tabindex="-1">O que \xE9 um &quot;Padr\xE3o de Gerenciamento do Estado&quot;? <a class="header-anchor" href="#o-que-e-um-padrao-de-gerenciamento-do-estado" aria-hidden="true">#</a></h2><p>Vamos come\xE7ar com uma aplica\xE7\xE3o simples em Vue, um contador:</p><div class="language-js"><pre><code><span class="token keyword">const</span> Counter <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// state</span>
  <span class="token function">data</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// view</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div&gt;{{ count }}&lt;/div&gt;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token comment">// actions</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">increment</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">createApp</span><span class="token punctuation">(</span>Counter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
</code></pre></div><p>\xC9 uma aplica\xE7\xE3o independente com as seguintes partes:</p><ul><li>O <strong>estado</strong> (<em>state</em>), que \xE9 a fonte da verdade que direciona nossa aplica\xE7\xE3o;</li><li>A <strong><em>view</em></strong>, que \xE9 apenas um mapeamento declarativo do <strong>estado</strong>;</li><li>As <strong>a\xE7\xF5es</strong> (<em>actions</em>), que s\xE3o as poss\xEDveis maneiras pelas quais o estado pode mudar em rea\xE7\xE3o \xE0s intera\xE7\xF5es dos usu\xE1rios da <strong><em>view</em></strong>.</li></ul><p>Esta \xE9 uma representa\xE7\xE3o simples do conceito de &quot;fluxo de dados unidirecional&quot; (<em>one-way</em>):</p><p style="text-align:center;margin:2em;"><img style="width:100%;max-width:450px;" src="`+e+'"></p><p>No entanto, a simplicidade \xE9 rapidamente descartada quando temos <strong>v\xE1rios componentes que compartilham um estado comum</strong>:</p><ul><li>M\xFAltiplas <em>views</em> que podem depender do mesmo peda\xE7o de estado.</li><li>A\xE7\xF5es de diferentes <em>views</em> que podem precisar alterar o mesmo peda\xE7o de estado.</li></ul><p>Para o problema um, passar tudo via propriedades (<em>props</em>) pode ser entediante para componentes profundamente aninhados e simplesmente n\xE3o funciona para componentes irm\xE3os. Para o problema dois, muitas vezes nos encontramos recorrendo a solu\xE7\xF5es como buscar refer\xEAncias diretas de inst\xE2ncia pai / filho ou tentar mudar e sincronizar v\xE1rias c\xF3pias do estado por meio de eventos. Ambos os padr\xF5es s\xE3o fr\xE1geis e levam rapidamente a c\xF3digos imposs\xEDveis de manter.</p><p>Ent\xE3o, por que n\xE3o extra\xEDmos o estado compartilhado dos componentes, e o gerenciamos em um <em>singleton</em> global? Com isso, nossa \xE1rvore de componentes se torna uma grande &quot;<em>view</em>&quot;, e qualquer componente pode acessar o estado ou acionar a\xE7\xF5es, n\xE3o importando onde elas estejam na \xE1rvore!</p><p>Al\xE9m disso, ao definir e separar os conceitos envolvidos no gerenciamento do estado e aplicar regras que mant\xEAm a independ\xEAncia entre as <em>views</em> e os estados, damos ao nosso c\xF3digo mais estrutura e capacidade de manuten\xE7\xE3o.</p><p>Esta \xE9 a ideia b\xE1sica por tr\xE1s do Vuex, inspirado no <a href="https://facebook.github.io/flux/docs/overview" target="_blank" rel="noopener noreferrer">Flux</a>, <a href="http://redux.js.org/" target="_blank" rel="noopener noreferrer">Redux</a> e <a href="https://guide.elm-lang.org/architecture/" target="_blank" rel="noopener noreferrer">The Elm Architecture</a>. Ao contr\xE1rio dos outros padr\xF5es, o Vuex tamb\xE9m \xE9 uma implementa\xE7\xE3o da biblioteca adaptada especificamente para o Vue.js aproveitar as vantagens de seu sistema de reatividade granular para atualiza\xE7\xF5es eficientes.</p><p>Se voc\xEA quiser aprender Vuex de uma forma interativa, voc\xEA pode conferir esse <a href="https://scrimba.com/g/gvuex" target="_blank" rel="noopener noreferrer">curso de Vuex no Scrimba</a>, que oferece uma mistura de <em>screencast</em> e <em>playground</em> de c\xF3digo em que voc\xEA pode pausar e brincar com o c\xF3digo a qualquer momento.</p><p><img src="'+a+'" alt="vuex"></p><h2 id="quando-usar-o-vuex" tabindex="-1">Quando usar o Vuex? <a class="header-anchor" href="#quando-usar-o-vuex" aria-hidden="true">#</a></h2><p>Embora o Vuex nos ajude a lidar com o gerenciamento de estado compartilhado, ele tamb\xE9m vem com o custo de mais conceitos e c\xF3digos repetitivos. \xC9 uma escolha de pr\xF3s e contras entre produtividade de curto e longo prazo</p><p>Se voc\xEA nunca construiu um SPA em grande escala e for direto para o Vuex, ele pode parecer verboso e desanimador. Isso \xE9 perfeitamente normal - se a sua aplica\xE7\xE3o \xE9 simples, voc\xEA provavelmente ficar\xE1 bem sem o Vuex. Um simples <a href="https://v3.vuejs.org/guide/state-management.html#simple-state-management-from-scratch" target="_blank" rel="noopener noreferrer">store pattern</a> pode ser tudo que voc\xEA precisa. Mas, se voc\xEA est\xE1 criando um SPA de m\xE9dio a grande porte, \xE9 prov\xE1vel que tenha encontrado situa\xE7\xF5es que fazem voc\xEA pensar em como lidar melhor com o estado fora de seus componentes Vue, e o Vuex ser\xE1 naturalmente o pr\xF3ximo passo para voc\xEA. H\xE1 uma boa cita\xE7\xE3o de Dan Abramov, o autor do Redux:</p><blockquote><p>As bibliotecas Flux s\xE3o como \xF3culos: voc\xEA saber\xE1 quando precisar delas.</p></blockquote>',22),i=[p];function c(u,d,m,l,g,v){return n(),s("div",null,i)}var q=o(r,[["render",c]]);export{h as __pageData,q as default};
