import{_ as a,y as e,x as s,W as n}from"./plugin-vue_export-helper.0b0d78d5.js";const h='{"title":"Refer\xEAncia da API","description":"","frontmatter":{"sidebar":"auto"},"headers":[{"level":2,"title":"Store","slug":"store"},{"level":3,"title":"createStore","slug":"createstore"},{"level":2,"title":"Op\xE7\xF5es do Construtor Store","slug":"opcoes-do-construtor-store"},{"level":3,"title":"state (estado)","slug":"state-estado"},{"level":3,"title":"mutations (muta\xE7\xF5es)","slug":"mutations-mutacoes"},{"level":3,"title":"actions (a\xE7\xF5es)","slug":"actions-acoes"},{"level":3,"title":"getters","slug":"getters"},{"level":3,"title":"modules (m\xF3dulos)","slug":"modules-modulos"},{"level":3,"title":"plugins","slug":"plugins"},{"level":3,"title":"strict","slug":"strict"},{"level":3,"title":"devtools","slug":"devtools"},{"level":2,"title":"Propriedades da Inst\xE2ncia Store","slug":"propriedades-da-instancia-store"},{"level":3,"title":"state (estado)","slug":"state-estado-1"},{"level":3,"title":"getters","slug":"getters-1"},{"level":2,"title":"M\xE9todos da Inst\xE2ncia Store","slug":"metodos-da-instancia-store"},{"level":3,"title":"commit","slug":"commit"},{"level":3,"title":"dispatch","slug":"dispatch"},{"level":3,"title":"replaceState","slug":"replacestate"},{"level":3,"title":"watch","slug":"watch"},{"level":3,"title":"subscribe","slug":"subscribe"},{"level":3,"title":"subscribeAction","slug":"subscribeaction"},{"level":3,"title":"registerModule","slug":"registermodule"},{"level":3,"title":"unregisterModule","slug":"unregistermodule"},{"level":3,"title":"hasModule","slug":"hasmodule"},{"level":3,"title":"hotUpdate","slug":"hotupdate"},{"level":2,"title":"M\xE9todos Auxiliares de Vincula\xE7\xE3o aos Componentes","slug":"metodos-auxiliares-de-vinculacao-aos-componentes"},{"level":3,"title":"mapState","slug":"mapstate"},{"level":3,"title":"mapGetters","slug":"mapgetters"},{"level":3,"title":"mapActions","slug":"mapactions"},{"level":3,"title":"mapMutations","slug":"mapmutations"},{"level":3,"title":"createNamespacedHelpers","slug":"createnamespacedhelpers"},{"level":2,"title":"Fun\xE7\xF5es de Composi\xE7\xE3o","slug":"funcoes-de-composicao"},{"level":3,"title":"useStore","slug":"usestore"}],"relativePath":"ptbr/api/index.md","lastUpdated":1702210160130}',t={},o=n(`<h1 id="referencia-da-api" tabindex="-1">Refer\xEAncia da API <a class="header-anchor" href="#referencia-da-api" aria-hidden="true">#</a></h1><h2 id="store" tabindex="-1">Store <a class="header-anchor" href="#store" aria-hidden="true">#</a></h2><h3 id="createstore" tabindex="-1">createStore <a class="header-anchor" href="#createstore" aria-hidden="true">#</a></h3><ul><li><p><code>createStore&lt;S&gt;(options: StoreOptions&lt;S&gt;): Store&lt;S&gt;</code></p><p>Cria um novo <em>store</em>.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>

<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>options <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div></li></ul><h2 id="opcoes-do-construtor-store" tabindex="-1">Op\xE7\xF5es do Construtor Store <a class="header-anchor" href="#opcoes-do-construtor-store" aria-hidden="true">#</a></h2><h3 id="state-estado" tabindex="-1">state (estado) <a class="header-anchor" href="#state-estado" aria-hidden="true">#</a></h3><ul><li><p>type: <code>Object | Function</code></p><p>O objeto raiz de estado para o <em>store</em> Vuex. <a href="./../guide/state.html">Detalhes</a></p><p>Se voc\xEA passar uma fun\xE7\xE3o que retorna um objeto, o objeto retornado \xE9 usado como o estado raiz. Isso \xE9 \xFAtil quando voc\xEA deseja reutilizar o objeto de estado, especialmente para reutiliza\xE7\xE3o de m\xF3dulos. <a href="./../guide/modules.html#reutilizacao-do-modulo">Detalhes</a></p></li></ul><h3 id="mutations-mutacoes" tabindex="-1">mutations (muta\xE7\xF5es) <a class="header-anchor" href="#mutations-mutacoes" aria-hidden="true">#</a></h3><ul><li><p>type: <code>{ [type: string]: Function }</code></p><p>Registra muta\xE7\xF5es no <em>store</em>. A fun\xE7\xE3o manipuladora (ou <em>handler</em>) sempre recebe <em>state</em> como o 1\xBA argumento (ser\xE1 o estado local do m\xF3dulo se definido em um m\xF3dulo) e receber\xE1 um 2\xBA argumento <em>payload</em> se houver um.</p><p><a href="./../guide/mutations.html">Detalhes</a></p></li></ul><h3 id="actions-acoes" tabindex="-1">actions (a\xE7\xF5es) <a class="header-anchor" href="#actions-acoes" aria-hidden="true">#</a></h3><ul><li><p>type: <code>{ [type: string]: Function }</code></p><p>Registra a\xE7\xF5es no <em>store</em>. A fun\xE7\xE3o manipuladora (ou <em>handler</em>) recebe um objeto <em>context</em> que exp\xF5e as seguintes propriedades:</p><div class="language-js"><pre><code><span class="token punctuation">{</span>
  state<span class="token punctuation">,</span>      <span class="token comment">// o mesmo que \`store.state\`, ou estado local se estiver em m\xF3dulos</span>
  rootState<span class="token punctuation">,</span>  <span class="token comment">// o mesmo que \`store.state\`, apenas em m\xF3dulos</span>
  commit<span class="token punctuation">,</span>     <span class="token comment">// o mesmo que \`store.commit\`</span>
  dispatch<span class="token punctuation">,</span>   <span class="token comment">// o mesmo que \`store.dispatch\`</span>
  getters<span class="token punctuation">,</span>    <span class="token comment">// o mesmo que \`store.getters\`, ou getters locais se estiver em m\xF3dulos</span>
  rootGetters <span class="token comment">// o mesmo que \`store.getters\`, apenas em m\xF3dulos</span>
<span class="token punctuation">}</span>
</code></pre></div><p>E tamb\xE9m recebe um 2\xBA argumento <em>payload</em> se houver um.</p><p><a href="./../guide/actions.html">Detalhes</a></p></li></ul><h3 id="getters" tabindex="-1">getters <a class="header-anchor" href="#getters" aria-hidden="true">#</a></h3><ul><li><p>type: <code>{ [key: string]: Function }</code></p><p>Registra os <em>getters</em> no <em>store</em>. A fun\xE7\xE3o <em>getter</em> recebe os seguintes argumentos:</p><div class="language-"><pre><code>state,     // ser\xE1 estado local do m\xF3dulo se definido em um m\xF3dulo.
getters    // o mesmo que store.getters
</code></pre></div><p>Especificamente quando definido em um m\xF3dulo</p><div class="language-"><pre><code>state,       // ser\xE1 estado local do m\xF3dulo se definido em um m\xF3dulo.
getters,     // m\xF3dulo de getters locais do m\xF3dulo atual.
rootState,   // estado global
rootGetters  // todos os getters
</code></pre></div><p>Os <em>getters</em> registrados est\xE3o expostos em <code>store.getters</code>.</p><p><a href="./../guide/getters.html">Detalhes</a></p></li></ul><h3 id="modules-modulos" tabindex="-1">modules (m\xF3dulos) <a class="header-anchor" href="#modules-modulos" aria-hidden="true">#</a></h3><ul><li><p>type: <code>Object</code></p><p>Um objeto contendo sub m\xF3dulos a serem incorporados no <em>store</em>, de forma que:</p><div class="language-js"><pre><code><span class="token punctuation">{</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    state<span class="token punctuation">,</span>
    namespaced<span class="token operator">?</span><span class="token punctuation">,</span>
    mutations<span class="token operator">?</span><span class="token punctuation">,</span>
    actions<span class="token operator">?</span><span class="token punctuation">,</span>
    getters<span class="token operator">?</span><span class="token punctuation">,</span>
    modules<span class="token operator">?</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Cada m\xF3dulo pode conter <em>state</em> e <em>mutations</em> semelhantes \xE0s op\xE7\xF5es raiz. O estado de um m\xF3dulo ser\xE1 anexado ao estado da raiz do <em>store</em> usando a chave do m\xF3dulo. As muta\xE7\xF5es e <em>getters</em> de um m\xF3dulo receber\xE3o apenas o estado local do m\xF3dulo como o 1\xBA argumento em vez do estado da raiz, e as a\xE7\xF5es do m\xF3dulo <em>context.state</em> tamb\xE9m apontar\xE3o para o estado local.</p><p><a href="./../guide/modules.html">Detalhes</a></p></li></ul><h3 id="plugins" tabindex="-1">plugins <a class="header-anchor" href="#plugins" aria-hidden="true">#</a></h3><ul><li><p>type: <code>Array&lt;Function&gt;</code></p><p>Um <em>Array</em> de fun\xE7\xF5es de plug-in a serem aplicadas no <em>store</em>. O plug-in simplesmente recebe o <em>store</em> como o \xFAnico argumento e pode ouvir muta\xE7\xF5es (para persist\xEAncia de dados de sa\xEDda, registro ou depura\xE7\xE3o) ou despachar muta\xE7\xF5es (para dados de entrada, por exemplo, <em>websockets</em> ou <em>observables</em>).</p><p><a href="./../guide/plugins.html">Detalhes</a></p></li></ul><h3 id="strict" tabindex="-1">strict <a class="header-anchor" href="#strict" aria-hidden="true">#</a></h3><ul><li><p>type: <code>boolean</code></p></li><li><p>default: <code>false</code></p><p>For\xE7a o <em>store</em> Vuex a rodar mo modo estrito. No modo estrito, qualquer muta\xE7\xE3o ao estado do Vuex fora dos manipuladores de muta\xE7\xE3o acusar\xE1 um erro.</p><p><a href="./../guide/strict.html">Detalhes</a></p></li></ul><h3 id="devtools" tabindex="-1">devtools <a class="header-anchor" href="#devtools" aria-hidden="true">#</a></h3><ul><li><p>type: <code>boolean</code></p><p>Ative ou desative o <em>devtools</em> para uma determinada inst\xE2ncia Vuex. Passar <code>false</code> \xE0 inst\xE2ncia diz ao <em>store</em> Vuex para n\xE3o se integrar ao <em>devtools</em>. Bem \xFAtil quando se tem v\xE1rios <em>stores</em> em uma <em>single</em> <em>page</em>.</p><div class="language-js"><pre><code><span class="token punctuation">{</span>
  <span class="token literal-property property">devtools</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h2 id="propriedades-da-instancia-store" tabindex="-1">Propriedades da Inst\xE2ncia Store <a class="header-anchor" href="#propriedades-da-instancia-store" aria-hidden="true">#</a></h2><h3 id="state-estado-1" tabindex="-1">state (estado) <a class="header-anchor" href="#state-estado-1" aria-hidden="true">#</a></h3><ul><li><p>type: <code>Object</code></p><p>O estado raiz. Apenas leitura.</p></li></ul><h3 id="getters-1" tabindex="-1">getters <a class="header-anchor" href="#getters-1" aria-hidden="true">#</a></h3><ul><li><p>type: <code>Object</code></p><p>Exp\xF5e os <em>getters</em> registrados. Apenas leitura.</p></li></ul><h2 id="metodos-da-instancia-store" tabindex="-1">M\xE9todos da Inst\xE2ncia Store <a class="header-anchor" href="#metodos-da-instancia-store" aria-hidden="true">#</a></h2><h3 id="commit" tabindex="-1">commit <a class="header-anchor" href="#commit" aria-hidden="true">#</a></h3><ul><li><code>commit(type: string, payload?: any, options?: Object)</code></li><li><code>commit(mutation: Object, options?: Object)</code></li></ul><p>Confirma (ou faz um <em>Commit</em> de) uma muta\xE7\xE3o. <em>options</em> pode ter <code>root: true</code> que permite confirmar muta\xE7\xF5es da raiz em <a href="./../guide/modules.html#namespacing">m\xF3dulos namespaced</a>. <a href="./../guide/mutations.html">Detalhes</a></p><h3 id="dispatch" tabindex="-1">dispatch <a class="header-anchor" href="#dispatch" aria-hidden="true">#</a></h3><ul><li><code>dispatch(type: string, payload?: any, options?: Object): Promise&lt;any&gt;</code></li><li><code>dispatch(action: Object, options?: Object): Promise&lt;any&gt;</code></li></ul><p>Despacha uma a\xE7\xE3o. <em>options</em> pode ter <code>root: true</code> que permite despachar a\xE7\xF5es para raiz em <a href="./../guide/modules.html#namespacing">m\xF3dulos namespaced</a>. Retorna um <em>Promise</em> que resolve todos os manipuladores de a\xE7\xE3o acionados. <a href="./../guide/actions.html">Detalhes</a></p><h3 id="replacestate" tabindex="-1">replaceState <a class="header-anchor" href="#replacestate" aria-hidden="true">#</a></h3><ul><li><code>replaceState(state: Object)</code></li></ul><p>Substitue o estado da raiz do <em>store</em>. Use isso apenas para fins de <em>hydration</em> / <em>time-travel</em>.</p><h3 id="watch" tabindex="-1">watch <a class="header-anchor" href="#watch" aria-hidden="true">#</a></h3><ul><li><code>watch(fn: Function, callback: Function, options?: Object): Function</code></li></ul><p>Visualiza de forma reativa um valor de retorno de <code>fn</code>, e chama o <em>callback</em> para o retorno de chamada quando o valor for alterado. O <code>fn</code> recebe o estado do <em>store</em> como o 1\xBA argumento, e os <em>getters</em> como o 2\xBA argumento. Aceita um objeto de op\xE7\xF5es opcional que leva as mesmas op\xE7\xF5es que o <a href="https://vuejs.org/v2/api/#vm-watch" target="_blank" rel="noopener noreferrer">m\xE9todo vm.$watch do Vue</a>.</p><p>Para parar um <em>watch</em>, chame a fun\xE7\xE3o <em>unwatch</em> retornada.</p><h3 id="subscribe" tabindex="-1">subscribe <a class="header-anchor" href="#subscribe" aria-hidden="true">#</a></h3><ul><li><code>subscribe(handler: Function, options?: Object): Function</code></li></ul><p>Assinatura para as muta\xE7\xF5es do <em>store</em>. O <code>manipulador</code> \xE9 chamado ap\xF3s cada muta\xE7\xE3o e recebe o descritor da muta\xE7\xE3o e o estado p\xF3s-muta\xE7\xE3o como argumentos:</p><div class="language-js"><pre><code><span class="token keyword">const</span> unsubscribe <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">mutation<span class="token punctuation">,</span> state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>type<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// you may call unsubscribe to stop the subscription</span>
<span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>Por padr\xE3o, o novo manipulador \xE9 adicionado ao final da cadeia, ent\xE3o ele ser\xE1 executado ap\xF3s outros manipuladores que foram adicionados antes. Isso pode ser sobrescrito adicionando <code>prepend: true</code> a <em>options</em>, que ir\xE1 adicionar o manipulador ao in\xEDcio da cadeia.</p><div class="language-js"><pre><code>store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">prepend</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>O m\xE9todo <em>subscribe</em> retornar\xE1 uma fun\xE7\xE3o <em>unsubscribe</em>, que deve ser chamada quando a assinatura n\xE3o for mais necess\xE1ria. Por exemplo, voc\xEA pode assinar um M\xF3dulo Vuex e cancelar a assinatura ao cancelar o registro do m\xF3dulo. Ou voc\xEA pode chamar <em>subscribe</em> de dentro de um componente Vue e ent\xE3o destruir o componente mais tarde. Nesses casos, voc\xEA deve se lembrar de cancelar a assinatura manualmente.</p><p>Mais comumente usado em plugins. <a href="./../guide/plugins.html">Detalhes</a></p><h3 id="subscribeaction" tabindex="-1">subscribeAction <a class="header-anchor" href="#subscribeaction" aria-hidden="true">#</a></h3><ul><li><code>subscribeAction(handler: Function, options?: Object): Function</code></li></ul><p>Assinatura para as a\xE7\xF5es do <em>store</em>. O <code>manipulador</code> \xE9 chamado para cada a\xE7\xE3o despachada e recebe o descritor da a\xE7\xE3o e o estado de armazenamento atual como argumentos. O m\xE9todo <em>subscribe</em> retornar\xE1 uma fun\xE7\xE3o <em>unsubscribe</em>, que deve ser chamada quando a assinatura n\xE3o for mais necess\xE1ria. Por exemplo, ao cancelar o registro de um m\xF3dulo Vuex ou antes de destruir um componente Vue.</p><div class="language-js"><pre><code><span class="token keyword">const</span> unsubscribe <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">subscribeAction</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// you may call unsubscribe to stop the subscription</span>
<span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>Por padr\xE3o, o novo manipulador \xE9 adicionado ao final da cadeia, ent\xE3o ele ser\xE1 executado ap\xF3s outros manipuladores que foram adicionados antes. Isso pode ser sobrescrito adicionando <code>prepend: true</code> a <em>options</em>, que ir\xE1 adicionar o manipulador ao in\xEDcio da cadeia.</p><div class="language-js"><pre><code>store<span class="token punctuation">.</span><span class="token function">subscribeAction</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">prepend</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>O m\xE9todo <em>subscribeAction</em> retornar\xE1 uma fun\xE7\xE3o <em>unsubscribe</em>, que deve ser chamada quando a assinatura n\xE3o for mais necess\xE1ria. Por exemplo, voc\xEA pode assinar um M\xF3dulo Vuex e cancelar a assinatura ao cancelar o registro do m\xF3dulo. Ou voc\xEA pode chamar <em>subscribeAction</em> de dentro de um componente Vue e ent\xE3o destruir o componente mais tarde. Nesses casos, voc\xEA deve se lembrar de cancelar a assinatura manualmente.</p><p><em>subscribeAction</em> tamb\xE9m pode especificar se a fun\xE7\xE3o manipuladora da assinatura deve ser chamada <em>antes</em> ou <em>depois</em> de um despacho de a\xE7\xE3o (o comportamento padr\xE3o \xE9 <em>antes</em>):</p><div class="language-js"><pre><code>store<span class="token punctuation">.</span><span class="token function">subscribeAction</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">before</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">before action </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>action<span class="token punctuation">.</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">after</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">after action </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>action<span class="token punctuation">.</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p><em>subscribeAction</em> tamb\xE9m pode especificar uma fun\xE7\xE3o manipuladora <em>error</em> para capturar um erro lan\xE7ado quando uma a\xE7\xE3o \xE9 despachada. A fun\xE7\xE3o receber\xE1 um objeto <em>error</em> como 3\xBA argumento.</p><div class="language-js"><pre><code>store<span class="token punctuation">.</span><span class="token function">subscribeAction</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> state<span class="token punctuation">,</span> error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">error action </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>action<span class="token punctuation">.</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>O m\xE9todo <em>subscribeAction</em> \xE9 mais comumente usado em plugins. <a href="./../guide/plugins.html">Detalhes</a></p><h3 id="registermodule" tabindex="-1">registerModule <a class="header-anchor" href="#registermodule" aria-hidden="true">#</a></h3><ul><li><code>registerModule(path: string | Array&lt;string&gt;, module: Module, options?: Object)</code></li></ul><p>Registra um m\xF3dulo din\xE2mico. <a href="./../guide/modules.html#registro-de-modulo-dinamico">Detalhes</a></p><p><em>options</em> podem ter <code>preserveState: true</code> que permite preservar o estado anterior. Bem \xFAtil quando fazemos renderiza\xE7\xE3o do lado do servidor (<em>server-side-rendering</em>).</p><h3 id="unregistermodule" tabindex="-1">unregisterModule <a class="header-anchor" href="#unregistermodule" aria-hidden="true">#</a></h3><ul><li><code>unregisterModule(path: string | Array&lt;string&gt;)</code></li></ul><p>Cancela o registro de um m\xF3dulo din\xE2mico. <a href="./../guide/modules.html#registro-de-modulo-dinamico">Detalhes</a></p><h3 id="hasmodule" tabindex="-1">hasModule <a class="header-anchor" href="#hasmodule" aria-hidden="true">#</a></h3><ul><li><p><code>hasModule(path: string | Array&lt;string&gt;): boolean</code></p><p>Verifica se o m\xF3dulo com o nome fornecido j\xE1 foi registrado. <a href="./../guide/modules.html#registro-de-modulo-dinamico">Detalhes</a></p></li></ul><h3 id="hotupdate" tabindex="-1">hotUpdate <a class="header-anchor" href="#hotupdate" aria-hidden="true">#</a></h3><ul><li><code>hotUpdate(newOptions: Object)</code></li></ul><p>Faz <em>hot</em> <em>swap</em> de novas a\xE7\xF5es e muta\xE7\xF5es <a href="./../guide/hot-reload.html">Detalhes</a></p><h2 id="metodos-auxiliares-de-vinculacao-aos-componentes" tabindex="-1">M\xE9todos Auxiliares de Vincula\xE7\xE3o aos Componentes <a class="header-anchor" href="#metodos-auxiliares-de-vinculacao-aos-componentes" aria-hidden="true">#</a></h2><h3 id="mapstate" tabindex="-1">mapState <a class="header-anchor" href="#mapstate" aria-hidden="true">#</a></h3><ul><li><code>mapState(namespace?: string, map: Array&lt;string&gt; | Object&lt;string | function&gt;): Object</code></li></ul><p>Cria dados computados do componente que retornam a sub\xE1rvore do <em>store</em> Vuex. <a href="./../guide/state.html#o-auxiliar-mapstate">Detalhes</a></p><p>O 1\xBA argumento pode ser opcionalmente uma <em>String</em> com <em>namespace</em>. <a href="./../guide/modules.html#vinculando-metodos-auxiliares-com-namespace">Detalhes</a></p><p>O segundo objeto que comp\xF5em os argumentos pode ser uma fun\xE7\xE3o. <code>function(state: any)</code></p><h3 id="mapgetters" tabindex="-1">mapGetters <a class="header-anchor" href="#mapgetters" aria-hidden="true">#</a></h3><ul><li><code>mapGetters(namespace?: string, map: Array&lt;string&gt; | Object&lt;string&gt;): Object</code></li></ul><p>Cria dados computados do componente que retornam o valor calculado de um <em>getter</em>. <a href="./../guide/getters.html#o-auxiliar-mapgetters">Detalhes</a></p><p>O 1\xBA argumento pode ser opcionalmente uma <em>String</em> com <em>namespace</em>. <a href="./../guide/modules.html#vinculando-metodos-auxiliares-com-namespace">Detalhes</a></p><h3 id="mapactions" tabindex="-1">mapActions <a class="header-anchor" href="#mapactions" aria-hidden="true">#</a></h3><ul><li><code>mapActions(namespace?: string, map: Array&lt;string&gt; | Object&lt;string | function&gt;): Object</code></li></ul><p>Cria op\xE7\xF5es de m\xE9todos nos componentes que despacham uma a\xE7\xE3o. <a href="./../guide/actions.html#despachando-acoes-em-componentes">Detalhes</a></p><p>O 1\xBA argumento pode ser opcionalmente uma <em>String</em> com <em>namespace</em>. <a href="./../guide/modules.html#vinculando-metodos-auxiliares-com-namespace">Detalhes</a></p><p>O segundo objeto que comp\xF5em os argumentos pode ser uma fun\xE7\xE3o. <code>function(dispatch: function, ...args: any[])</code></p><h3 id="mapmutations" tabindex="-1">mapMutations <a class="header-anchor" href="#mapmutations" aria-hidden="true">#</a></h3><ul><li><code>mapMutations(namespace?: string, map: Array&lt;string&gt; | Object&lt;string | function&gt;): Object</code></li></ul><p>Cria op\xE7\xF5es de m\xE9todos nos componentes que confirmam (ou fazem um <em>commit</em> de) uma muta\xE7\xE3o. <a href="./../guide/mutations.html#confirmando-ou-fazendo-commits-de-mutacoes-em-componentes">Detalhes</a></p><p>O 1\xBA argumento pode ser opcionalmente uma <em>String</em> com <em>namespace</em>. <a href="./../guide/modules.html#vinculando-metodos-auxiliares-com-namespace">Detalhes</a></p><p>O segundo objeto que comp\xF5em os argumentos pode ser uma fun\xE7\xE3o. <code>function(commit: function, ...args: any[])</code></p><h3 id="createnamespacedhelpers" tabindex="-1">createNamespacedHelpers <a class="header-anchor" href="#createnamespacedhelpers" aria-hidden="true">#</a></h3><ul><li><code>createNamespacedHelpers(namespace: string): Object</code></li></ul><p>Cria m\xE9todos auxiliares de componentes vinculados por um nome. O objeto retornado conter\xE1 <code>mapState</code>, <code>mapGetters</code>, <code>mapActions</code> e <code>mapMutations</code>, que est\xE3o vinculados ao <em>namespace</em> fornecido. <a href="./../guide/modules.html#vinculando-metodos-auxiliares-com-namespace">Detalhes</a></p><h2 id="funcoes-de-composicao" tabindex="-1">Fun\xE7\xF5es de Composi\xE7\xE3o <a class="header-anchor" href="#funcoes-de-composicao" aria-hidden="true">#</a></h2><h3 id="usestore" tabindex="-1">useStore <a class="header-anchor" href="#usestore" aria-hidden="true">#</a></h3><ul><li><p><code>useStore&lt;S = any&gt;(injectKey?: InjectionKey&lt;Store&lt;S&gt;&gt; | string): Store&lt;S&gt;;</code></p><p>Busca o <em>store</em> injetado quando chamado dentro do gatilho (ou <em>hook</em>) <em>setup</em>. Ao usar a API de composi\xE7\xE3o, voc\xEA pode recuperar o <em>store</em> chamando este m\xE9todo.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">setup</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Os usu\xE1rios do TypeScript podem usar uma <em>injection</em> <em>key</em> para recuperar um <em>store</em> tipado. Para que isso funcione, voc\xEA deve definir a <em>injection</em> <em>key</em> e pass\xE1-la junto com o <em>store</em> ao instalar a inst\xE2ncia do <em>store</em> na aplica\xE7\xE3o Vue.</p><p>Primeiro, declare a <em>injection</em> <em>key</em> usando a interface <code>InjectionKey</code> do Vue.</p><div class="language-ts"><pre><code><span class="token comment">// store.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> InjectionKey <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createStore<span class="token punctuation">,</span> Store <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">State</span> <span class="token punctuation">{</span>
  count<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> key<span class="token operator">:</span> InjectionKey<span class="token operator">&lt;</span>Store<span class="token operator">&lt;</span>State<span class="token operator">&gt;&gt;</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token generic-function"><span class="token function">createStore</span><span class="token generic class-name"><span class="token operator">&lt;</span>State<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  state<span class="token operator">:</span> <span class="token punctuation">{</span>
    count<span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>Ent\xE3o, passe a <em>key</em> definida como o 2\xBA argumento para o m\xE9todo <code>app.use</code>.</p><div class="language-ts"><pre><code><span class="token comment">// main.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> store<span class="token punctuation">,</span> key <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>store<span class="token punctuation">,</span> key<span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
</code></pre></div><p>Finalmente, voc\xEA pode passar a <em>key</em> para o m\xE9todo <em>useStore</em> para recuperar a inst\xE2ncia tipada do <em>store</em>.</p><div class="language-ts"><pre><code><span class="token comment">// no componente vue</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> key <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">setup</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>

    store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>count <span class="token comment">// tipado como n\xFAmero</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul>`,98),p=[o];function c(r,i,u,l,d,m){return s(),e("div",null,p)}var g=a(t,[["render",c]]);export{h as __pageData,g as default};
