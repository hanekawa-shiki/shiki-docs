import{_ as n,y as s,x as a,W as t}from"./plugin-vue_export-helper.0b0d78d5.js";const g='{"title":"\u30C6\u30B9\u30C8","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8","slug":"\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8"},{"level":2,"title":"\u30A2\u30AF\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8","slug":"\u30A2\u30AF\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8"},{"level":2,"title":"\u30B2\u30C3\u30BF\u30FC\u306E\u30C6\u30B9\u30C8","slug":"\u30B2\u30C3\u30BF\u30FC\u306E\u30C6\u30B9\u30C8"},{"level":2,"title":"\u30C6\u30B9\u30C8\u306E\u5B9F\u884C","slug":"\u30C6\u30B9\u30C8\u306E\u5B9F\u884C"},{"level":3,"title":"Node \u3067\u306E\u5B9F\u884C","slug":"node-\u3067\u306E\u5B9F\u884C"},{"level":3,"title":"\u30D6\u30E9\u30A6\u30B6\u3067\u306E\u5B9F\u884C","slug":"\u30D6\u30E9\u30A6\u30B6\u3067\u306E\u5B9F\u884C"},{"level":3,"title":"Karma + karma-webpack \u3092\u4F7F\u3063\u305F\u30D6\u30E9\u30A6\u30B6\u3067\u306E\u5B9F\u884C","slug":"karma-karma-webpack-\u3092\u4F7F\u3063\u305F\u30D6\u30E9\u30A6\u30B6\u3067\u306E\u5B9F\u884C"}],"relativePath":"ja/guide/testing.md","lastUpdated":1702210160129}',p={},o=t(`<h1 id="\u30C6\u30B9\u30C8" tabindex="-1">\u30C6\u30B9\u30C8 <a class="header-anchor" href="#\u30C6\u30B9\u30C8" aria-hidden="true">#</a></h1><div class="scrimba"><a href="https://scrimba.com/p/pnyzgAP/cPGkpJhq" target="_blank" rel="noopener noreferrer">Scrimba \u306E\u30EC\u30C3\u30B9\u30F3\u3092\u8A66\u3059</a></div><p>\u79C1\u305F\u3061\u304C Vuex \u3067\u30E6\u30CB\u30C3\u30C8\u30C6\u30B9\u30C8\u3057\u305F\u3044\u4E3B\u306A\u90E8\u5206\u306F\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u3068\u30A2\u30AF\u30B7\u30E7\u30F3\u3067\u3059\u3002</p><h2 id="\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8" tabindex="-1">\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8 <a class="header-anchor" href="#\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8" aria-hidden="true">#</a></h2><p>\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u306F\u5B8C\u5168\u306B\u5F15\u6570\u306B\u4F9D\u5B58\u3057\u3066\u3044\u308B\u3060\u3051\u306E\u95A2\u6570\u3067\u3042\u308B\u305F\u3081\u3001\u30C6\u30B9\u30C8\u3059\u308B\u306E\u304C\u3068\u3066\u3082\u7C21\u5358\u3067\u3059\u3002\u52B9\u679C\u7684\u306A\u3084\u308A\u65B9\u3068\u3057\u3066\u3001\u3082\u3057 ES2015 \u306E\u30E2\u30B8\u30E5\u30FC\u30EB\u3092\u4F7F\u3063\u3066\u3044\u3066 <code>store.js</code> \u30D5\u30A1\u30A4\u30EB\u306E\u4E2D\u306B\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u304C\u3042\u308B\u306A\u3089\u3001\u30C7\u30D5\u30A9\u30EB\u30C8\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u306B\u52A0\u3048\u3066\u3001\u540D\u524D\u4ED8\u304D\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u3067\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u3092\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u3067\u304D\u307E\u3059\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>

<span class="token comment">// \u540D\u524D\u4ED8\u304D\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u3067\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u3092\u30A8\u30AF\u30B9\u30DD\u30FC\u30C8\u3059\u308B</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  state<span class="token punctuation">,</span>
  mutations
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>Mocha + Chai \u3092\u4F7F\u7528\u3057\u3066\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u3092\u30C6\u30B9\u30C8\u3059\u308B\u4F8B\u3067\u3059\uFF08\u3042\u306A\u305F\u306E\u597D\u304D\u306A\u4EFB\u610F\u306E\u30D5\u30EC\u30FC\u30E0\u30EF\u30FC\u30AF/\u30A2\u30B5\u30FC\u30B7\u30E7\u30F3\u30E9\u30A4\u30D6\u30E9\u30EA\u3092\u4F7F\u7528\u3067\u304D\u307E\u3059\uFF09:</p><div class="language-js"><pre><code><span class="token comment">// mutations.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">increment</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>count<span class="token operator">++</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// mutations.spec.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;chai&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> mutations <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span>

<span class="token comment">// \u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u306E\u5206\u5272\u675F\u7E1B</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> increment <span class="token punctuation">}</span> <span class="token operator">=</span> mutations

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;mutations&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;INCREMENT&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u30B9\u30C6\u30FC\u30C8\u306E\u30E2\u30C3\u30AF</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
    <span class="token comment">// \u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u3092\u9069\u7528\u3059\u308B</span>
    <span class="token function">increment</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span>
    <span class="token comment">// \u7D50\u679C\u3092\u691C\u8A3C\u3059\u308B</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u30A2\u30AF\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8" tabindex="-1">\u30A2\u30AF\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8 <a class="header-anchor" href="#\u30A2\u30AF\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8" aria-hidden="true">#</a></h2><p>\u30A2\u30AF\u30B7\u30E7\u30F3\u306F\u5916\u90E8\u306E API \u3092\u547C\u3073\u51FA\u3059\u53EF\u80FD\u6027\u304C\u3042\u308B\u305F\u3081\u3001\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8\u3088\u308A\u3082\u5C11\u3057\u6CE8\u610F\u304C\u5FC5\u8981\u3067\u3059\u3002\u30A2\u30AF\u30B7\u30E7\u30F3\u3092\u30C6\u30B9\u30C8\u3059\u308B\u3068\u304D\u3001\u901A\u5E38\u3001\u3044\u304F\u3064\u304B\u306E\u6BB5\u968E\u3067\u30E2\u30C3\u30AF\u3092\u4F5C\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002\u4F8B\u3048\u3070 API \u547C\u3073\u51FA\u3057\u3092\u30B5\u30FC\u30D3\u30B9\u3068\u3057\u3066\u62BD\u8C61\u5316\u3057\u3001\u305D\u3057\u3066\u30C6\u30B9\u30C8\u306E\u5185\u90E8\u3067\u306F\u305D\u306E\u30B5\u30FC\u30D3\u30B9\u3092\u30E2\u30C3\u30AF\u306B\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002\u7C21\u5358\u306B\u4F9D\u5B58\u95A2\u4FC2\u3092\u30E2\u30C3\u30AF\u5316\u3059\u308B\u305F\u3081\u306B\u3001webpack \u3068 <a href="https://github.com/plasticine/inject-loader" target="_blank" rel="noopener noreferrer">inject-loader</a> \u3092\u4F7F\u3063\u3066\u30C6\u30B9\u30C8\u30D5\u30A1\u30A4\u30EB\u3092\u30D0\u30F3\u30C9\u30EB\u3059\u308B\u3053\u3068\u304C\u3067\u304D\u307E\u3059\u3002</p><p>\u975E\u540C\u671F\u306A\u30A2\u30AF\u30B7\u30E7\u30F3\u306E\u30C6\u30B9\u30C8\u306E\u4F8B:</p><div class="language-js"><pre><code><span class="token comment">// actions.js</span>
<span class="token keyword">import</span> shop <span class="token keyword">from</span> <span class="token string">&#39;../api/shop&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getAllProducts</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> commit <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;REQUEST_PRODUCTS&#39;</span><span class="token punctuation">)</span>
  shop<span class="token punctuation">.</span><span class="token function">getProducts</span><span class="token punctuation">(</span><span class="token parameter">products</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;RECEIVE_PRODUCTS&#39;</span><span class="token punctuation">,</span> products<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// actions.spec.js</span>

<span class="token comment">// inline loader \u306E\u305F\u3081\u306B require \u69CB\u6587\u3092\u4F7F\u7528\u3059\u308B</span>
<span class="token comment">// \u3053\u3053\u3067\u306F inject-loader \u3092\u4F7F\u3063\u3066\u3001\u30E2\u30C3\u30AF\u5316\u3055\u308C\u305F\u4F9D\u5B58\u95A2\u4FC2\u3092\u6CE8\u5165\u3067\u304D\u308B\u3088\u3046\u306B\u3059\u308B\u30E2\u30B8\u30E5\u30FC\u30EB\u30D5\u30A1\u30AF\u30C8\u30EA\u30FC\u3092\u8FD4\u3059</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;chai&#39;</span>
<span class="token keyword">const</span> actionsInjector <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;inject-loader!./actions&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u30E2\u30C3\u30AF\u306B\u3088\u3063\u3066\u30E2\u30B8\u30E5\u30FC\u30EB\u3092\u4F5C\u6210\u3059\u308B</span>
<span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token function">actionsInjector</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&#39;../api/shop&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">getProducts</span> <span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token comment">/* \u30EC\u30B9\u30DD\u30F3\u30B9\u306E\u30E2\u30C3\u30AF */</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u671F\u5F85\u3055\u308C\u308B\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u3092\u30A2\u30AF\u30B7\u30E7\u30F3\u304C\u547C\u3073\u51FA\u3059\u304B\u3092\u30C6\u30B9\u30C8\u3059\u308B\u305F\u3081\u306E\u30D8\u30EB\u30D1\u30FC</span>
<span class="token keyword">const</span> <span class="token function-variable function">testAction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> state<span class="token punctuation">,</span> expectedMutations<span class="token punctuation">,</span> done</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token comment">// \u30B3\u30DF\u30C3\u30C8\u3092\u30E2\u30C3\u30AF\u3059\u308B</span>
  <span class="token keyword">const</span> <span class="token function-variable function">commit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> mutation <span class="token operator">=</span> expectedMutations<span class="token punctuation">[</span>count<span class="token punctuation">]</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">expect</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>type<span class="token punctuation">)</span>
      <span class="token function">expect</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>deep<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">done</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    count<span class="token operator">++</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&gt;=</span> expectedMutations<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u30E2\u30C3\u30AF\u5316\u3057\u305F\u30B9\u30C8\u30A2\u3068\u5F15\u6570\u3067\u30A2\u30AF\u30B7\u30E7\u30F3\u3092\u547C\u3073\u51FA\u3059</span>
  <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">{</span> commit<span class="token punctuation">,</span> state <span class="token punctuation">}</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span>

  <span class="token comment">// \u547C\u3073\u51FA\u3055\u308C\u308B\u3079\u304D\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u304C\u6B8B\u3063\u3066\u3044\u306A\u3044\u304B\u78BA\u8A8D\u3059\u308B</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>expectedMutations<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;actions&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;getAllProducts&#39;</span><span class="token punctuation">,</span> <span class="token parameter">done</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">testAction</span><span class="token punctuation">(</span>actions<span class="token punctuation">.</span>getAllProducts<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;REQUEST_PRODUCTS&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;RECEIVE_PRODUCTS&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">/* \u30EC\u30B9\u30DD\u30F3\u30B9\u306E\u30E2\u30C3\u30AF */</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span> done<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u30C6\u30B9\u30C8\u74B0\u5883\u306B\u304A\u3044\u3066\u5229\u7528\u53EF\u80FD\u306A\u30B9\u30D1\u30A4\u304C\u3042\u308B\u306E\u306A\u3089(\u4F8B\u3048\u3070<a href="http://sinonjs.org/" target="_blank" rel="noopener noreferrer">Sinon.JS</a>)\u3001<code>testAction</code> \u30D8\u30EB\u30D1\u30FC\u306E\u4EE3\u308F\u308A\u306B\u305D\u308C\u3089\u3092\u4F7F\u7528\u3067\u304D\u307E\u3059:</p><div class="language-js"><pre><code><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;actions&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;getAllProducts&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> commit <span class="token operator">=</span> sinon<span class="token punctuation">.</span><span class="token function">spy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    actions<span class="token punctuation">.</span><span class="token function">getAllProducts</span><span class="token punctuation">(</span><span class="token punctuation">{</span> commit<span class="token punctuation">,</span> state <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>commit<span class="token punctuation">.</span>args<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>deep<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token punctuation">[</span><span class="token string">&#39;REQUEST_PRODUCTS&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token string">&#39;RECEIVE_PRODUCTS&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">/* \u30EC\u30B9\u30DD\u30F3\u30B9\u306E\u30E2\u30C3\u30AF */</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u30B2\u30C3\u30BF\u30FC\u306E\u30C6\u30B9\u30C8" tabindex="-1">\u30B2\u30C3\u30BF\u30FC\u306E\u30C6\u30B9\u30C8 <a class="header-anchor" href="#\u30B2\u30C3\u30BF\u30FC\u306E\u30C6\u30B9\u30C8" aria-hidden="true">#</a></h2><p>\u3082\u3057\u30B2\u30C3\u30BF\u30FC\u304C\u8907\u96D1\u306A\u8A08\u7B97\u3092\u884C\u3063\u3066\u3044\u308B\u306A\u3089\u3070\u3001\u30C6\u30B9\u30C8\u30B3\u30FC\u30C9\u3092\u66F8\u304F\u4FA1\u5024\u304C\u3042\u308A\u307E\u3059\u3002\u30B2\u30C3\u30BF\u30FC\u306F\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u3068\u540C\u69D8\u306E\u7406\u7531\u3067\u30C6\u30B9\u30C8\u3057\u3084\u3059\u3044\u3067\u3059\u3002</p><p>\u30B2\u30C3\u30BF\u30FC\u306E\u30C6\u30B9\u30C8\u306E\u4F8B:</p><div class="language-js"><pre><code><span class="token comment">// getters.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> getters <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">filteredProducts</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> <span class="token punctuation">{</span> filterCategory <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> state<span class="token punctuation">.</span>products<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">product</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> product<span class="token punctuation">.</span>category <span class="token operator">===</span> filterCategory
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// getters.spec.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;chai&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getters <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./getters&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;getters&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;filteredProducts&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u30B9\u30C6\u30FC\u30C8\u3092\u30E2\u30C3\u30AF\u3059\u308B</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">products</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Apple&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&#39;fruit&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Orange&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&#39;fruit&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Carrot&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&#39;vegetable&#39;</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u30B2\u30C3\u30BF\u30FC\u3092\u30E2\u30C3\u30AF\u3059\u308B</span>
    <span class="token keyword">const</span> filterCategory <span class="token operator">=</span> <span class="token string">&#39;fruit&#39;</span>

    <span class="token comment">// \u30B2\u30C3\u30BF\u30FC\u304B\u3089\u7D50\u679C\u3092\u53D7\u3051\u53D6\u308B</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> getters<span class="token punctuation">.</span><span class="token function">filteredProducts</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> filterCategory <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// \u7D50\u679C\u3092\u691C\u8A3C\u3059\u308B</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>deep<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Apple&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&#39;fruit&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Orange&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&#39;fruit&#39;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u30C6\u30B9\u30C8\u306E\u5B9F\u884C" tabindex="-1">\u30C6\u30B9\u30C8\u306E\u5B9F\u884C <a class="header-anchor" href="#\u30C6\u30B9\u30C8\u306E\u5B9F\u884C" aria-hidden="true">#</a></h2><p>\u30DF\u30E5\u30FC\u30C6\u30FC\u30B7\u30E7\u30F3\u3084\u30A2\u30AF\u30B7\u30E7\u30F3\u304C\u9069\u5207\u306B\u66F8\u304B\u308C\u3066\u3044\u308B\u5834\u5408\u306F\u3001\u9069\u5207\u306B\u30E2\u30C3\u30AF\u5316\u3055\u308C\u305F\u5F8C\u3001\u30C6\u30B9\u30C8\u30B3\u30FC\u30C9\u306F\u30D6\u30E9\u30A6\u30B6\u306E API \u306B\u76F4\u63A5\u4F9D\u5B58\u95A2\u4FC2\u3092\u6301\u3064\u3053\u3068\u306F\u306A\u3044\u3067\u3057\u3087\u3046\u3002\u3057\u305F\u304C\u3063\u3066\u3001\u5358\u7D14\u306B webpack \u3067\u30C6\u30B9\u30C8\u3092\u30D0\u30F3\u30C9\u30EB\u3067\u304D\u3001\u305D\u308C\u3092\u76F4\u63A5 Node \u3067\u5B9F\u884C\u3067\u304D\u307E\u3059\u3002\u5225\u306E\u65B9\u6CD5\u3068\u3057\u3066\u3001\u672C\u5F53\u306E\u30D6\u30E9\u30A6\u30B6\u3067\u30C6\u30B9\u30C8\u3092\u5B9F\u884C\u3059\u308B\u305F\u3081\u306B\u306F <code>mocha-loader</code> \u307E\u305F\u306F Karma + <code>karma-webpack</code> \u3092\u4F7F\u7528\u3067\u304D\u307E\u3059\u3002</p><h3 id="node-\u3067\u306E\u5B9F\u884C" tabindex="-1">Node \u3067\u306E\u5B9F\u884C <a class="header-anchor" href="#node-\u3067\u306E\u5B9F\u884C" aria-hidden="true">#</a></h3><p>\u4EE5\u4E0B\u306E\u3088\u3046\u306A webpack \u306E\u8A2D\u5B9A\u3092\u4F5C\u6210\u3057\u307E\u3059\uFF08<a href="https://babeljs.io/docs/usage/babelrc/" target="_blank" rel="noopener noreferrer"><code>.babelrc</code></a> \u3082\u3042\u308F\u305B\u3066\u4F7F\u3044\u307E\u3059\uFF09:</p><div class="language-js"><pre><code><span class="token comment">// webpack.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./test.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> __dirname<span class="token punctuation">,</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;test-bundle.js&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">loaders</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u305D\u308C\u304B\u3089\u4E0B\u8A18\u30B3\u30DE\u30F3\u30C9\u3092\u5B9F\u884C\u3057\u307E\u3059:</p><div class="language-bash"><pre><code>webpack
mocha test-bundle.js
</code></pre></div><h3 id="\u30D6\u30E9\u30A6\u30B6\u3067\u306E\u5B9F\u884C" tabindex="-1">\u30D6\u30E9\u30A6\u30B6\u3067\u306E\u5B9F\u884C <a class="header-anchor" href="#\u30D6\u30E9\u30A6\u30B6\u3067\u306E\u5B9F\u884C" aria-hidden="true">#</a></h3><ol><li><code>mocha-loader</code> \u3092\u30A4\u30F3\u30B9\u30C8\u30FC\u30EB\u3059\u308B</li><li>\u4E0A\u8A18 webpack \u8A2D\u5B9A\u304B\u3089 <code>entry</code> \u3092 <code>&#39;mocha-loader!babel-loader!./test.js&#39;</code> \u306B\u5909\u66F4\u3059\u308B</li><li>\u8A2D\u5B9A\u3092\u4F7F\u7528\u3057\u3066 <code>webpack-dev-server</code> \u3092\u958B\u59CB\u3059\u308B</li><li>\u30D6\u30E9\u30A6\u30B6\u3067 <code>localhost:8080/webpack-dev-server/test-bundle</code> \u3092\u958B\u304F</li></ol><h3 id="karma-karma-webpack-\u3092\u4F7F\u3063\u305F\u30D6\u30E9\u30A6\u30B6\u3067\u306E\u5B9F\u884C" tabindex="-1">Karma + karma-webpack \u3092\u4F7F\u3063\u305F\u30D6\u30E9\u30A6\u30B6\u3067\u306E\u5B9F\u884C <a class="header-anchor" href="#karma-karma-webpack-\u3092\u4F7F\u3063\u305F\u30D6\u30E9\u30A6\u30B6\u3067\u306E\u5B9F\u884C" aria-hidden="true">#</a></h3><p><a href="https://vue-loader.vuejs.org/ja/workflow/testing.html" target="_blank" rel="noopener noreferrer">vue-loader \u30C9\u30AD\u30E5\u30E1\u30F3\u30C8</a> \u5185\u306E\u30BB\u30C3\u30C8\u30A2\u30C3\u30D7\u65B9\u6CD5\u3092\u53C2\u8003\u306B\u3057\u3066\u304F\u3060\u3055\u3044\u3002</p>`,32),e=[o];function c(l,u,r,k,i,d){return a(),s("div",null,e)}var y=n(p,[["render",c]]);export{g as __pageData,y as default};
