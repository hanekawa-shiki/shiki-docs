import{_ as n,y as s,x as a,W as t}from"./plugin-vue_export-helper.0b0d78d5.js";const g='{"title":"\u6D4B\u8BD5","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6D4B\u8BD5 Mutation","slug":"\u6D4B\u8BD5-mutation"},{"level":2,"title":"\u6D4B\u8BD5 Action","slug":"\u6D4B\u8BD5-action"},{"level":2,"title":"\u6D4B\u8BD5 Getter","slug":"\u6D4B\u8BD5-getter"},{"level":2,"title":"\u6267\u884C\u6D4B\u8BD5","slug":"\u6267\u884C\u6D4B\u8BD5"},{"level":3,"title":"\u5728 Node \u4E2D\u6267\u884C\u6D4B\u8BD5","slug":"\u5728-node-\u4E2D\u6267\u884C\u6D4B\u8BD5"},{"level":3,"title":"\u5728\u6D4F\u89C8\u5668\u4E2D\u6D4B\u8BD5","slug":"\u5728\u6D4F\u89C8\u5668\u4E2D\u6D4B\u8BD5"},{"level":3,"title":"\u4F7F\u7528 Karma + karma-webpack \u5728\u6D4F\u89C8\u5668\u4E2D\u6267\u884C\u6D4B\u8BD5","slug":"\u4F7F\u7528-karma-karma-webpack-\u5728\u6D4F\u89C8\u5668\u4E2D\u6267\u884C\u6D4B\u8BD5"}],"relativePath":"zh/guide/testing.md","lastUpdated":1702210160145}',p={},o=t(`<h1 id="\u6D4B\u8BD5" tabindex="-1">\u6D4B\u8BD5 <a class="header-anchor" href="#\u6D4B\u8BD5" aria-hidden="true">#</a></h1><div class="scrimba"><a href="https://scrimba.com/p/pnyzgAP/cPGkpJhq" target="_blank" rel="noopener noreferrer">\u5728 Scrimba \u4E0A\u5C1D\u8BD5\u8FD9\u8282\u8BFE</a></div><p>\u6211\u4EEC\u4E3B\u8981\u60F3\u9488\u5BF9 Vuex \u4E2D\u7684 mutation \u548C action \u8FDB\u884C\u5355\u5143\u6D4B\u8BD5\u3002</p><h2 id="\u6D4B\u8BD5-mutation" tabindex="-1">\u6D4B\u8BD5 Mutation <a class="header-anchor" href="#\u6D4B\u8BD5-mutation" aria-hidden="true">#</a></h2><p>Mutation \u5F88\u5BB9\u6613\u88AB\u6D4B\u8BD5\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u4EC5\u4EC5\u662F\u4E00\u4E9B\u5B8C\u5168\u4F9D\u8D56\u53C2\u6570\u7684\u51FD\u6570\u3002\u8FD9\u91CC\u6709\u4E00\u4E2A\u5C0F\u6280\u5DE7\uFF0C\u5982\u679C\u4F60\u4F7F\u7528\u4E86 ES2015 \u6A21\u5757\uFF0C\u4E14\u5C06 mutation \u5B9A\u4E49\u5728\u4E86 <code>store.js</code> \u6587\u4EF6\u4E2D\uFF0C\u90A3\u4E48\u9664\u4E86\u6A21\u5757\u7684\u9ED8\u8BA4\u5BFC\u51FA\u5916\uFF0C\u4F60\u8FD8\u5E94\u8BE5\u5C06 mutation \u8FDB\u884C\u547D\u540D\u5BFC\u51FA\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>

<span class="token comment">// \`mutations\` \u4F5C\u4E3A\u547D\u540D\u8F93\u51FA\u5BF9\u8C61</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  state<span class="token punctuation">,</span>
  mutations
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4E0B\u9762\u662F\u7528 Mocha + Chai \u6D4B\u8BD5\u4E00\u4E2A mutation \u7684\u4F8B\u5B50\uFF08\u5B9E\u9645\u4E0A\u4F60\u53EF\u4EE5\u7528\u4EFB\u4F55\u4F60\u559C\u6B22\u7684\u6D4B\u8BD5\u6846\u67B6\uFF09\uFF1A</p><div class="language-js"><pre><code><span class="token comment">// mutations.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">increment</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>count<span class="token operator">++</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// mutations.spec.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;chai&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> mutations <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span>

<span class="token comment">// \u89E3\u6784 \`mutations\`</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> increment <span class="token punctuation">}</span> <span class="token operator">=</span> mutations

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;mutations&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;INCREMENT&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6A21\u62DF\u72B6\u6001</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
    <span class="token comment">// \u5E94\u7528 mutation</span>
    <span class="token function">increment</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span>
    <span class="token comment">// \u65AD\u8A00\u7ED3\u679C</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6D4B\u8BD5-action" tabindex="-1">\u6D4B\u8BD5 Action <a class="header-anchor" href="#\u6D4B\u8BD5-action" aria-hidden="true">#</a></h2><p>Action \u5E94\u5BF9\u8D77\u6765\u7565\u5FAE\u68D8\u624B\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u53EF\u80FD\u9700\u8981\u8C03\u7528\u5916\u90E8\u7684 API\u3002\u5F53\u6D4B\u8BD5 action \u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u9700\u8981\u589E\u52A0\u4E00\u4E2A mocking \u670D\u52A1\u5C42\u2014\u2014\u4F8B\u5982\uFF0C\u6211\u4EEC\u53EF\u4EE5\u628A API \u8C03\u7528\u62BD\u8C61\u6210\u670D\u52A1\uFF0C\u7136\u540E\u5728\u6D4B\u8BD5\u6587\u4EF6\u4E2D\u7528 mock \u670D\u52A1\u56DE\u5E94 API \u8C03\u7528\u3002\u4E3A\u4E86\u4FBF\u4E8E\u89E3\u51B3 mock \u4F9D\u8D56\uFF0C\u53EF\u4EE5\u7528 webpack \u548C <a href="https://github.com/plasticine/inject-loader" target="_blank" rel="noopener noreferrer">inject-loader</a> \u6253\u5305\u6D4B\u8BD5\u6587\u4EF6\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u6D4B\u8BD5\u5F02\u6B65 action \u7684\u4F8B\u5B50\uFF1A</p><div class="language-js"><pre><code><span class="token comment">// actions.js</span>
<span class="token keyword">import</span> shop <span class="token keyword">from</span> <span class="token string">&#39;../api/shop&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">getAllProducts</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> commit <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;REQUEST_PRODUCTS&#39;</span><span class="token punctuation">)</span>
  shop<span class="token punctuation">.</span><span class="token function">getProducts</span><span class="token punctuation">(</span><span class="token parameter">products</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;RECEIVE_PRODUCTS&#39;</span><span class="token punctuation">,</span> products<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// actions.spec.js</span>

<span class="token comment">// \u4F7F\u7528 require \u8BED\u6CD5\u5904\u7406\u5185\u8054 loaders\u3002</span>
<span class="token comment">// inject-loader \u8FD4\u56DE\u4E00\u4E2A\u5141\u8BB8\u6211\u4EEC\u6CE8\u5165 mock \u4F9D\u8D56\u7684\u6A21\u5757\u5DE5\u5382</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;chai&#39;</span>
<span class="token keyword">const</span> actionsInjector <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;inject-loader!./actions&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u4F7F\u7528 mocks \u521B\u5EFA\u6A21\u5757</span>
<span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token function">actionsInjector</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&#39;../api/shop&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">getProducts</span> <span class="token punctuation">(</span><span class="token parameter">cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token comment">/* mocked response */</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u7528\u6307\u5B9A\u7684 mutations \u6D4B\u8BD5 action \u7684\u8F85\u52A9\u51FD\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">testAction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> args<span class="token punctuation">,</span> state<span class="token punctuation">,</span> expectedMutations<span class="token punctuation">,</span> done</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token comment">// \u6A21\u62DF\u63D0\u4EA4</span>
  <span class="token keyword">const</span> <span class="token function-variable function">commit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> mutation <span class="token operator">=</span> expectedMutations<span class="token punctuation">[</span>count<span class="token punctuation">]</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">expect</span><span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>
      <span class="token function">expect</span><span class="token punctuation">(</span>mutation<span class="token punctuation">.</span>payload<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>deep<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">done</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    count<span class="token operator">++</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&gt;=</span> expectedMutations<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u7528\u6A21\u62DF\u7684 store \u548C\u53C2\u6570\u8C03\u7528 action</span>
  <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">{</span> commit<span class="token punctuation">,</span> state <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span>

  <span class="token comment">// \u68C0\u67E5\u662F\u5426\u6CA1\u6709 mutation \u88AB dispatch</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>expectedMutations<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;actions&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;getAllProducts&#39;</span><span class="token punctuation">,</span> <span class="token parameter">done</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">testAction</span><span class="token punctuation">(</span>actions<span class="token punctuation">.</span>getAllProducts<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;REQUEST_PRODUCTS&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;RECEIVE_PRODUCTS&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">/* mocked response */</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span> done<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5982\u679C\u5728\u6D4B\u8BD5\u73AF\u5883\u4E0B\u6709\u53EF\u7528\u7684 spy (\u6BD4\u5982\u901A\u8FC7 <a href="http://sinonjs.org/" target="_blank" rel="noopener noreferrer">Sinon.JS</a>)\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u5B83\u4EEC\u66FF\u6362\u8F85\u52A9\u51FD\u6570 <code>testAction</code>\uFF1A</p><div class="language-js"><pre><code><span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;actions&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;getAllProducts&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> commit <span class="token operator">=</span> sinon<span class="token punctuation">.</span><span class="token function">spy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    actions<span class="token punctuation">.</span><span class="token function">getAllProducts</span><span class="token punctuation">(</span><span class="token punctuation">{</span> commit<span class="token punctuation">,</span> state <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">expect</span><span class="token punctuation">(</span>commit<span class="token punctuation">.</span>args<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>deep<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token punctuation">[</span><span class="token string">&#39;REQUEST_PRODUCTS&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token string">&#39;RECEIVE_PRODUCTS&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">/* mocked response */</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6D4B\u8BD5-getter" tabindex="-1">\u6D4B\u8BD5 Getter <a class="header-anchor" href="#\u6D4B\u8BD5-getter" aria-hidden="true">#</a></h2><p>\u5982\u679C\u4F60\u7684 getter \u5305\u542B\u5F88\u590D\u6742\u7684\u8BA1\u7B97\u8FC7\u7A0B\uFF0C\u5F88\u6709\u5FC5\u8981\u6D4B\u8BD5\u5B83\u4EEC\u3002Getter \u7684\u6D4B\u8BD5\u4E0E mutation \u4E00\u6837\u76F4\u622A\u4E86\u5F53\u3002</p><p>\u6D4B\u8BD5\u4E00\u4E2A getter \u7684\u793A\u4F8B\uFF1A</p><div class="language-js"><pre><code><span class="token comment">// getters.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> getters <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">filteredProducts</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> <span class="token punctuation">{</span> filterCategory <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> state<span class="token punctuation">.</span>products<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">product</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> product<span class="token punctuation">.</span>category <span class="token operator">===</span> filterCategory
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// getters.spec.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;chai&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getters <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./getters&#39;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;getters&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;filteredProducts&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6A21\u62DF\u72B6\u6001</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">products</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Apple&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&#39;fruit&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Orange&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&#39;fruit&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Carrot&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&#39;vegetable&#39;</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6A21\u62DF getter</span>
    <span class="token keyword">const</span> filterCategory <span class="token operator">=</span> <span class="token string">&#39;fruit&#39;</span>

    <span class="token comment">// \u83B7\u53D6 getter \u7684\u7ED3\u679C</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> getters<span class="token punctuation">.</span><span class="token function">filteredProducts</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> <span class="token punctuation">{</span> filterCategory <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// \u65AD\u8A00\u7ED3\u679C</span>
    <span class="token function">expect</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">.</span>deep<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Apple&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&#39;fruit&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Orange&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&#39;fruit&#39;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6267\u884C\u6D4B\u8BD5" tabindex="-1">\u6267\u884C\u6D4B\u8BD5 <a class="header-anchor" href="#\u6267\u884C\u6D4B\u8BD5" aria-hidden="true">#</a></h2><p>\u5982\u679C\u4F60\u7684 mutation \u548C action \u7F16\u5199\u6B63\u786E\uFF0C\u7ECF\u8FC7\u5408\u7406\u5730 mocking \u5904\u7406\u4E4B\u540E\u8FD9\u4E9B\u6D4B\u8BD5\u5E94\u8BE5\u4E0D\u4F9D\u8D56\u4EFB\u4F55\u6D4F\u89C8\u5668 API\uFF0C\u56E0\u6B64\u4F60\u53EF\u4EE5\u76F4\u63A5\u7528 webpack \u6253\u5305\u8FD9\u4E9B\u6D4B\u8BD5\u6587\u4EF6\u7136\u540E\u5728 Node \u4E2D\u6267\u884C\u3002\u6362\u79CD\u65B9\u5F0F\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u7528 <code>mocha-loader</code> \u6216 Karma + <code>karma-webpack</code> \u5728\u771F\u5B9E\u6D4F\u89C8\u5668\u73AF\u5883\u4E2D\u8FDB\u884C\u6D4B\u8BD5\u3002</p><h3 id="\u5728-node-\u4E2D\u6267\u884C\u6D4B\u8BD5" tabindex="-1">\u5728 Node \u4E2D\u6267\u884C\u6D4B\u8BD5 <a class="header-anchor" href="#\u5728-node-\u4E2D\u6267\u884C\u6D4B\u8BD5" aria-hidden="true">#</a></h3><p>\u521B\u5EFA\u4EE5\u4E0B webpack \u914D\u7F6E\uFF08\u914D\u7F6E\u597D <a href="https://babeljs.io/docs/usage/babelrc/" target="_blank" rel="noopener noreferrer"><code>.babelrc</code></a>\uFF09:</p><div class="language-js"><pre><code><span class="token comment">// webpack.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./test.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> __dirname<span class="token punctuation">,</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;test-bundle.js&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">loaders</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7136\u540E\uFF1A</p><div class="language-bash"><pre><code>webpack
mocha test-bundle.js
</code></pre></div><h3 id="\u5728\u6D4F\u89C8\u5668\u4E2D\u6D4B\u8BD5" tabindex="-1">\u5728\u6D4F\u89C8\u5668\u4E2D\u6D4B\u8BD5 <a class="header-anchor" href="#\u5728\u6D4F\u89C8\u5668\u4E2D\u6D4B\u8BD5" aria-hidden="true">#</a></h3><ol><li>\u5B89\u88C5 <code>mocha-loader</code>\u3002</li><li>\u628A\u4E0A\u8FF0 webpack \u914D\u7F6E\u4E2D\u7684 <code>entry</code> \u6539\u6210 <code>&#39;mocha-loader!babel-loader!./test.js&#39;</code>\u3002</li><li>\u7528\u4EE5\u4E0A\u914D\u7F6E\u542F\u52A8 <code>webpack-dev-server</code>\u3002</li><li>\u8BBF\u95EE <code>localhost:8080/webpack-dev-server/test-bundle</code>\u3002</li></ol><h3 id="\u4F7F\u7528-karma-karma-webpack-\u5728\u6D4F\u89C8\u5668\u4E2D\u6267\u884C\u6D4B\u8BD5" tabindex="-1">\u4F7F\u7528 Karma + karma-webpack \u5728\u6D4F\u89C8\u5668\u4E2D\u6267\u884C\u6D4B\u8BD5 <a class="header-anchor" href="#\u4F7F\u7528-karma-karma-webpack-\u5728\u6D4F\u89C8\u5668\u4E2D\u6267\u884C\u6D4B\u8BD5" aria-hidden="true">#</a></h3><p>\u8BE6\u89C1 <a href="https://vuejs.github.io/vue-loader/workflow/testing.html" target="_blank" rel="noopener noreferrer">Vue Loader \u7684\u6587\u6863</a>\u3002</p>`,32),e=[o];function c(l,u,r,k,i,d){return a(),s("div",null,e)}var y=n(p,[["render",c]]);export{g as __pageData,y as default};
