import{_ as s,c as n,o as a,b as l}from"./chunks/framework.B9NywAPp.js";const p=JSON.parse('{"title":"Custom Renderer API","description":"","frontmatter":{},"headers":[{"level":2,"title":"createRenderer()","slug":"createrenderer","link":"#createrenderer","children":[]}],"relativePath":"api/custom-renderer.md","filePath":"api/custom-renderer.md"}'),o={name:"api/custom-renderer.md"},e=[l('<h1 id="custom-renderer-api" tabindex="-1">Custom Renderer API <a class="header-anchor" href="#custom-renderer-api" aria-label="Permalink to &quot;Custom Renderer API {#custom-renderer-api}&quot;">​</a></h1><h2 id="createrenderer" tabindex="-1">createRenderer() <a class="header-anchor" href="#createrenderer" aria-label="Permalink to &quot;createRenderer() {#createrenderer}&quot;">​</a></h2><p>Creates a custom renderer. By providing platform-specific node creation and manipulation APIs, you can leverage Vue&#39;s core runtime to target non-DOM environments.</p><ul><li><p><strong>Type</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> createRenderer</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt;(</span></span>\n<span class="line"><span style="color:#FFAB70;">  options</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RendererOptions</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Renderer</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> Renderer</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt; {</span></span>\n<span class="line"><span style="color:#FFAB70;">  render</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RootRenderFunction</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#FFAB70;">  createApp</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> CreateAppFunction</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt;</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> RendererOptions</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt; {</span></span>\n<span class="line"><span style="color:#B392F0;">  patchProp</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#FFAB70;">    el</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    key</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    prevValue</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    nextValue</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#6A737D;">    // the rest is unused for most custom renderers</span></span>\n<span class="line"><span style="color:#FFAB70;">    isSVG</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    prevChildren</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> VNode</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt;[],</span></span>\n<span class="line"><span style="color:#FFAB70;">    parentComponent</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> ComponentInternalInstance</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    parentSuspense</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> SuspenseBoundary</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    unmountChildren</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> UnmountChildrenFn</span></span>\n<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>\n<span class="line"><span style="color:#B392F0;">  insert</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#FFAB70;">    el</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    parent</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    anchor</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span></span>\n<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>\n<span class="line"><span style="color:#B392F0;">  remove</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">el</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>\n<span class="line"><span style="color:#B392F0;">  createElement</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#FFAB70;">    type</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    isSVG</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> boolean</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    isCustomizedBuiltIn</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    vnodeProps</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">VNodeProps</span><span style="color:#F97583;"> &amp;</span><span style="color:#E1E4E8;"> { [</span><span style="color:#FFAB70;">key</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">|</span><span style="color:#79B8FF;"> null</span></span>\n<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span></span>\n<span class="line"><span style="color:#B392F0;">  createText</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">text</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span></span>\n<span class="line"><span style="color:#B392F0;">  createComment</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">text</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span></span>\n<span class="line"><span style="color:#B392F0;">  setText</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">node</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">text</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>\n<span class="line"><span style="color:#B392F0;">  setElementText</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">node</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">text</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>\n<span class="line"><span style="color:#B392F0;">  parentNode</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">node</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span></span>\n<span class="line"><span style="color:#B392F0;">  nextSibling</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">node</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">  // optional, DOM-specific</span></span>\n<span class="line"><span style="color:#B392F0;">  querySelector</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">selector</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span></span>\n<span class="line"><span style="color:#B392F0;">  setScopeId</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">el</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">id</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>\n<span class="line"><span style="color:#B392F0;">  cloneNode</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">node</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span></span>\n<span class="line"><span style="color:#B392F0;">  insertStaticContent</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">(</span></span>\n<span class="line"><span style="color:#FFAB70;">    content</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    parent</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    anchor</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#FFAB70;">    isSVG</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> boolean</span></span>\n<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#B392F0;">HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">HostNode</span><span style="color:#E1E4E8;">]</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>Example</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createRenderer } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@vue/runtime-core&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">render</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">createApp</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> createRenderer</span><span style="color:#E1E4E8;">({</span></span>\n<span class="line"><span style="color:#E1E4E8;">  patchProp,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  insert,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  remove,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  createElement</span></span>\n<span class="line"><span style="color:#6A737D;">  // ...</span></span>\n<span class="line"><span style="color:#E1E4E8;">})</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// `render` is the low-level API</span></span>\n<span class="line"><span style="color:#6A737D;">// `createApp` returns an app instance</span></span>\n<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> { render, createApp }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// re-export Vue core APIs</span></span>\n<span class="line"><span style="color:#F97583;">export</span><span style="color:#79B8FF;"> *</span><span style="color:#F97583;"> from</span><span style="color:#9ECBFF;"> &#39;@vue/runtime-core&#39;</span></span></code></pre></div><p>Vue&#39;s own <code>@vue/runtime-dom</code> is <a href="https://github.com/vuejs/core/blob/main/packages/runtime-dom/src/index.ts" target="_blank" rel="noreferrer">implemented using the same API</a>. For a simpler implementation, check out <a href="https://github.com/vuejs/core/blob/main/packages/runtime-test/src/index.ts" target="_blank" rel="noreferrer"><code>@vue/runtime-test</code></a> which is a private package for Vue&#39;s own unit testing.</p></li></ul>',4)];const t=s(o,[["render",function(s,l,p,o,t,r){return a(),n("div",null,e)}]]);export{p as __pageData,t as default};
